# Antigen: https://github.com/zsh-users/antigen
ANTIGEN="$HOME/.local/bin/antigen.zsh"

# Install antigen.zsh if not exist
if [ ! -f "$ANTIGEN" ]; then
	echo "Installing antigen ..."
	[ ! -d "$HOME/.local" ] && mkdir -p "$HOME/.local" 2> /dev/null
	[ ! -d "$HOME/.local/bin" ] && mkdir -p "$HOME/.local/bin" 2> /dev/null
	# [ ! -f "$HOME/.z" ] && touch "$HOME/.z"
	URL="http://git.io/antigen"
	TMPFILE="/tmp/antigen.zsh"
	if [ -x "$(which curl)" ]; then
		curl -L "$URL" -o "$TMPFILE"
	elif [ -x "$(which wget)" ]; then
		wget "$URL" -O "$TMPFILE"
	else
		echo "ERROR: please install curl or wget before installation !!"
		exit
	fi
	if [ ! $? -eq 0 ]; then
		echo ""
		echo "ERROR: downloading antigen.zsh ($URL) failed !!"
		exit
	fi;
	echo "move $TMPFILE to $ANTIGEN"
	mv "$TMPFILE" "$ANTIGEN"
fi



# Load local bash/zsh compatible settings
_INIT_SH_NOFUN=1
_INIT_SH_NOLOG=1
[ -f "$HOME/.local/etc/init.sh" ] && source "$HOME/.local/etc/init.sh"

# exit for non-interactive shell
[[ $- != *i* ]] && return

# WSL (aka Bash for Windows) doesn't work well with BG_NICE
[ -d "/mnt/c" ] && [[ "$(uname -a)" == *Microsoft* ]] && unsetopt BG_NICE

# Initialize command prompt
# export PS1="%n@%m:%~%# "

# Initialize antigen
source "$ANTIGEN"

# Setup dir stack
DIRSTACKSIZE=10
setopt autopushd pushdminus pushdsilent pushdtohome pushdignoredups cdablevars
alias d='dirs -v | head -10'

# Disable correction
unsetopt correct_all
unsetopt correct
DISABLE_CORRECTION="true"

# Enable 256 color to make auto-suggestions look nice
export TERM="xterm-256color"

ZSH_AUTOSUGGEST_USE_ASYNC=1

# Declare modules
zstyle ':prezto:*:*' color 'yes'
zstyle ':prezto:module:editor' key-bindings 'emacs'
zstyle ':prezto:module:git:alias' skip 'yes'
zstyle ':prezto:module:prompt' theme 'redhat'
zstyle ':prezto:module:prompt' pwd-length 'short'
zstyle ':prezto:module:terminal' auto-title 'yes'
zstyle ':prezto:module:autosuggestions' color 'yes'
zstyle ':prezto:module:python' autovenv 'yes'
zstyle ':prezto:load' pmodule \
	'environment' \
	'editor' \
	'history' \
	'git' \
	'utility' \
	'completion' \
	'history-substring-search' \
	'autosuggestions' \
	'prompt' \

	# 'autosuggestions' \

# Initialize prezto
antigen use prezto


# default bundles
antigen bundle skywind3000/z.lua
antigen bundle zdharma/fast-syntax-highlighting
antigen bundle zsh-users/zsh-autosuggestions


antigen bundle willghatch/zsh-cdr
antigen bundle zsh-users/zaw

antigen bundle zsh-users/zsh-completions
antigen bundle git

# personal bundles
antigen bundle thewtex/tmux-mem-cpu-load

# check login shell
if [[ -o login ]]; then
	[ -f "$HOME/.local/etc/login.sh" ] && source "$HOME/.local/etc/login.sh"
	[ -f "$HOME/.local/etc/login.zsh" ] && source "$HOME/.local/etc/login.zsh"
fi

# syntax color definition
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern)

typeset -A ZSH_HIGHLIGHT_STYLES

# ZSH_HIGHLIGHT_STYLES[command]=fg=white,bold
# ZSH_HIGHLIGHT_STYLES[alias]='fg=magenta,bold'

ZSH_HIGHLIGHT_STYLES[default]=none
ZSH_HIGHLIGHT_STYLES[unknown-token]=fg=009
ZSH_HIGHLIGHT_STYLES[reserved-word]=fg=009,standout
ZSH_HIGHLIGHT_STYLES[alias]=fg=cyan,bold
ZSH_HIGHLIGHT_STYLES[builtin]=fg=cyan,bold
ZSH_HIGHLIGHT_STYLES[function]=fg=cyan,bold
ZSH_HIGHLIGHT_STYLES[command]=fg=white,bold
ZSH_HIGHLIGHT_STYLES[precommand]=fg=white,underline
ZSH_HIGHLIGHT_STYLES[commandseparator]=none
ZSH_HIGHLIGHT_STYLES[hashed-command]=fg=009
ZSH_HIGHLIGHT_STYLES[path]=fg=214,underline
ZSH_HIGHLIGHT_STYLES[globbing]=fg=063
ZSH_HIGHLIGHT_STYLES[history-expansion]=fg=white,underline
ZSH_HIGHLIGHT_STYLES[single-hyphen-option]=none
ZSH_HIGHLIGHT_STYLES[double-hyphen-option]=none
ZSH_HIGHLIGHT_STYLES[back-quoted-argument]=none
ZSH_HIGHLIGHT_STYLES[single-quoted-argument]=fg=063
ZSH_HIGHLIGHT_STYLES[double-quoted-argument]=fg=063
ZSH_HIGHLIGHT_STYLES[dollar-double-quoted-argument]=fg=009
ZSH_HIGHLIGHT_STYLES[back-double-quoted-argument]=fg=009
ZSH_HIGHLIGHT_STYLES[assign]=none

# load local config
[ -f "$HOME/.local/etc/config.zsh" ] && source "$HOME/.local/etc/config.zsh"
[ -f "$HOME/.local/etc/local.zsh" ] && source "$HOME/.local/etc/local.zsh"

antigen apply

# options
unsetopt correct_all
unsetopt share_history
setopt prompt_subst

setopt BANG_HIST                 # Treat the '!' character specially during expansion.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
# setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
setopt HIST_VERIFY # Don't execute immediately upon history expansion.

# setup for deer
autoload -U deer
zle -N deer

# default keymap
bindkey -s '\ee' 'vim\n'
bindkey '\eh' backward-char
bindkey '\el' forward-char
bindkey '\ej' down-line-or-history
bindkey '\ek' up-line-or-history
bindkey '\eH' backward-word
bindkey '\eL' forward-word
bindkey '\eJ' beginning-of-line
bindkey '\eK' end-of-line

bindkey -s '\eo' 'cd ..\n'
bindkey -s '\e;' 'll\n'

bindkey '\e[1;3D' backward-word
bindkey '\e[1;3C' forward-word
bindkey '\e[1;3A' beginning-of-line
bindkey '\e[1;3B' end-of-line

bindkey '\ev' deer
bindkey -s '\eu' 'ranger_cd\n'
bindkey -s '\eOS' 'vim '


# source function.sh if it exists
[ -f "$HOME/.local/etc/function.sh" ] && . "$HOME/.local/etc/function.sh"

# Disable correction
unsetopt correct_all
unsetopt correct
DISABLE_CORRECTION="true"

# completion detail
zstyle ':completion:*:complete:-command-:*:*' ignored-patterns '*.pdf|*.exe|*.dll'
zstyle ':completion:*:*sh:*:' tag-order files


#==================================================================

#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
#
#				                Speedup ZSH                                  +
#
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# kolo cloud awesomepanda zhann edvardm


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
#
#				                Speedup ZSH                                  +
#
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
HISTSIZE=1000
SAVEHIST=1000


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
#
#				                Env                                          +
#
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export PS1="%K{green}%F{red}%n:%F{white}%1~ %F{yellow}%?%k%F{magenta}%#%  %f"
export EDITOR=nvim



#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
#
#				                Alias                                        +
#
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#

alias vim=nvim
alias vi="vim --noplugin"
alias today="date '+%Y-%m-%d'"
alias rm=trash
alias git=/usr/local/bin/git
alias dev="ssh chenjianyong@10.227.6.247"
alias devi18n="ssh chenjianyong@10.231.249.36"
alias ec="emacsclient -t"
alias es="emacs --daemon"
alias p3="/usr/local/bin/python3"
alias ctags="/usr/local/bin/ctags"
alias g="git"
alias gst="git status"
alias gcc="/usr/local/bin/gcc-9"
alias g++="/usr/local/bin/g++-9"
alias exe="./a.out"
alias gcloc="git-stats"



#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
#
#                               Golang                                       +
#
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#

export GOPATH="/Users/chenjianyong/go"
#export GOPROXY=https://goproxy.io
export PATH=$PATH:$GOPATH/bin
export GO111MODULE=on
export GO15VENDOREXPERIMENT=1
alias gotoday="go mod init code.byted.org/chenjianyong/`today`"


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
#
#				                NGINX                                        +
#
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#

export NGX_HOME="/Users/chenjianyong/Desktop/iGitHub/nginx"
alias ngx="/usr/local/nginx/sbin/nginx"
alias ngx-cfg="$NGX_HOME/configure --with-debug --with-cc-opt='-g -O0' --with-stream --with-http_ssl_module --with-openssl=/Users/chenjianyong/Desktop/ilinux/iinstall/openssl-1.1.1e --add-module=$NGX_HOME/3rd/my-modules/nginx-flv-module --add-module=$NGX_HOME/3rd/my-modules/nginx-http-testvariable-module"


# FIXME
function ngx-cfg2() {
    MODULE_ROOT_DIR=$NGX_HOME/3rd
    MODULE_MY_DIR=$MODULE_ROOT_DIR/my-modules
    CONFIGURE="$NGX_HOME/configure"
    BASIC_OPTS="--with-debug"
    DEPENDENCY_OPTS=""
    MODULES_OPTS=""

    # dependent modules
    dependency_modules=(
        --with-stream
    )
    for opt in $dependency_modules[@];
    do
        DEPENDENCY_OPTS=$DEPENDENCY_OPTS $opt
    done

    # my modules
    my_modules=(
        ngx-flv-module
        ngx-http-testvariable-module
        ngx-ncp3-module
    )
    for module in $my_modules[@];
    do
        # echo $MODULE_MY_DIR/$module
        MODULES_OPTS=$MODULES_OPTS --add-module=$MODULE_MY_DIR/$module
    done

    # TODO: other modules here

    echo $CONFIGURE $BASIC_OPTS $DEPENDENCY_OPTS $MODULES_OPTS
    $NGX_HOME/configure $BASIC_OPTS $DEPENDENCY_OPTS $MODULES_OPTS
}


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
#
#                               VIM                                          +
#
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
export VIMCONFIG="~/.config/nvim"
export VIMDATA="~/.local/share/nvim"



#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
#
#				                FlatBuffers                                  +
#
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#

alias flac="/Users/chenjianyong/Desktop/iGitHub/flatbuffers/flatc"






#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
#
#				                ByteFaaS                                     +
#
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#

fpath=($HOME/.fpath $fpath)






#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
#
#				                Personal Scripts                             +
#
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


function weather() {
    curl -s "wttr.in/$1?m1"
}

# git pull all
function gpla() {
    for dir in `ls`;
    do
        (cd $dir; git pull)
    done
}

# show colors
function showColors() {
    for i in {0..255};
        do printf "\x1b[38;5;${i}mcolor%-5i\x1b[0m" $i;
            if ! (( ($i + 1 ) % 8 ));
                then echo;
            fi;
    done

}

#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
#
#				                Tmux                                         +
#
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
alias t=tmux
alias tn="t new -t"
alias ta="t attach -t"
alias tls="t ls"



#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
#
#				                Automatically Added                          +
#
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

fpath=(~/.zsh $fpath)


export PATH="/usr/local/opt/curl/bin:$PATH"

export PATH="/usr/bin/:${PATH}"
export PATH="/usr/local/bin/:${PATH}"
export PATH="/Users/chenjianyong/go/src/github.com/hyperledger/fabric-samples/bin:${PATH}"
